const DATA = [
  {
    id: 1,
    company: "Photosnap",
    logo: "./images/photosnap.svg",
    new: true,
    featured: true,
    position: "Senior Frontend Developer",
    role: "Frontend",
    level: "Senior",
    postedAt: "1d ago",
    contract: "Full Time",
    location: "USA Only",
    languages: ["HTML", "CSS", "JavaScript"],
    tools: [],
  },
  {
    id: 2,
    company: "Manage",
    logo: "./images/manage.svg",
    new: true,
    featured: true,
    position: "Fullstack Developer",
    role: "Fullstack",
    level: "Midweight",
    postedAt: "1d ago",
    contract: "Part Time",
    location: "Remote",
    languages: ["Python"],
    tools: ["React"],
  },
  {
    id: 3,
    company: "Account",
    logo: "./images/account.svg",
    new: true,
    featured: false,
    position: "Junior Frontend Developer",
    role: "Frontend",
    level: "Junior",
    postedAt: "2d ago",
    contract: "Part Time",
    location: "USA Only",
    languages: ["JavaScript"],
    tools: ["React", "Sass"],
  },
  {
    id: 4,
    company: "MyHome",
    logo: "./images/myhome.svg",
    new: false,
    featured: false,
    position: "Junior Frontend Developer",
    role: "Frontend",
    level: "Junior",
    postedAt: "5d ago",
    contract: "Contract",
    location: "USA Only",
    languages: ["CSS", "JavaScript"],
    tools: [],
  },
  {
    id: 5,
    company: "Loop Studios",
    logo: "./images/loop-studios.svg",
    new: false,
    featured: false,
    position: "Software Engineer",
    role: "Fullstack",
    level: "Midweight",
    postedAt: "1w ago",
    contract: "Full Time",
    location: "Worldwide",
    languages: ["JavaScript", "Ruby"],
    tools: ["Sass"],
  },
  {
    id: 6,
    company: "FaceIt",
    logo: "./images/faceit.svg",
    new: false,
    featured: false,
    position: "Junior Backend Developer",
    role: "Backend",
    level: "Junior",
    postedAt: "2w ago",
    contract: "Full Time",
    location: "UK Only",
    languages: ["Ruby"],
    tools: ["RoR"],
  },
  {
    id: 7,
    company: "Shortly",
    logo: "./images/shortly.svg",
    new: false,
    featured: false,
    position: "Junior Developer",
    role: "Frontend",
    level: "Junior",
    postedAt: "2w ago",
    contract: "Full Time",
    location: "Worldwide",
    languages: ["HTML", "JavaScript"],
    tools: ["Sass"],
  },
  {
    id: 8,
    company: "Insure",
    logo: "./images/insure.svg",
    new: false,
    featured: false,
    position: "Junior Frontend Developer",
    role: "Frontend",
    level: "Junior",
    postedAt: "2w ago",
    contract: "Full Time",
    location: "USA Only",
    languages: ["JavaScript"],
    tools: ["Vue", "Sass"],
  },
  {
    id: 9,
    company: "Eyecam Co.",
    logo: "./images/eyecam-co.svg",
    new: false,
    featured: false,
    position: "Full Stack Engineer",
    role: "Fullstack",
    level: "Midweight",
    postedAt: "3w ago",
    contract: "Full Time",
    location: "Worldwide",
    languages: ["JavaScript", "Python"],
    tools: ["Django"],
  },
  {
    id: 10,
    company: "The Air Filter Company",
    logo: "./images/the-air-filter-company.svg",
    new: false,
    featured: false,
    position: "Front-end Dev",
    role: "Frontend",
    level: "Junior",
    postedAt: "1mo ago",
    contract: "Part Time",
    location: "Worldwide",
    languages: ["JavaScript"],
    tools: ["React", "Sass"],
  },
];

type Role = "Frontend" | "Backend" | "Fullstack";
type Level = "Junior" | "Senior" | "Midweight";

interface Job {
  id: number;
  company: string;
  logo: string;
  new: boolean;
  featured: boolean;
  position: string;
  role: string;
  level: string;
  postedAt: string;
  contract: string;
  location: string;
  languages: string[];
  tools: string[];
}

interface Filter {
  role: Role | "";
  level: Level | "";
  languages: string[];
  tools: string[];
}

class JobState {
  private jobs: Job[];
  private filter: Filter;
  private initialFilter: Filter = {
    role: "",
    level: "",
    languages: [],
    tools: [],
  };
  private static instance: JobState;

  private constructor() {
    this.jobs = DATA;
    this.filter = this.initialFilter;
  }

  static getInstance() {
    if (this.instance) {
      return this.instance;
    }
    this.instance = new JobState();
    return this.instance;
  }

  setFilter(filter: Filter) {
    this.filter = filter;
  }

  getJobs() {
    return this.jobs;
  }

  getFilter() {
    return this.filter;
  }

  clearFilter() {
    this.filter = { ...this.initialFilter };
  }

  getFilteredJobs() {
    if (
      this.filter.role === "" &&
      this.filter.level === "" &&
      this.filter.languages.length === 0 &&
      this.filter.tools.length === 0
    )
      return this.jobs;

    const roleFiltered =
      this.filter.role === ""
        ? this.jobs
        : this.jobs.filter((job) => job.role === this.filter.role);

    const levelFiltered =
      this.filter.level === ""
        ? roleFiltered
        : roleFiltered.filter((job) => job.level === this.filter.level);

    const languageFiltered =
      this.filter.languages.length === 0
        ? levelFiltered
        : levelFiltered.filter((job) =>
            this.filter.languages.every((language) =>
              job.languages.includes(language)
            )
          );

    const toolsFiltered =
      this.filter.tools.length === 0
        ? languageFiltered
        : languageFiltered.filter((job) =>
            this.filter.tools.every((tool) => job.tools.includes(tool))
          );

    return toolsFiltered;
  }
}

const jobState = JobState.getInstance();
jobState.setFilter({
  role: "Frontend",
  level: "Junior",
  languages: ["JavaScript"],
  tools: ["React"],
});

class RenderButton {
  text: string;
  btn: HTMLButtonElement;
  ul: HTMLUListElement;

  constructor(t: string) {
    this.text = t;
    this.btn = document.createElement("button");
    this.ul = document.querySelector("ul") as HTMLUListElement;
    this.btn.textContent = this.text;
    this.ul.appendChild(this.btn);
  }
}

class GetElements {
  templateElement: HTMLTemplateElement;
  hostElement: HTMLDivElement;
  element: HTMLElement;

  constructor() {
    this.templateElement = document.getElementById(
      "filter-bar"
    )! as HTMLTemplateElement;

    this.hostElement = document.getElementById("app")! as HTMLDivElement;
    this.element = document.importNode(this.templateElement.content, true)
      .firstElementChild as HTMLElement;

    this.attach();
    const { role, level, languages, tools } = jobState.getFilter();
    new RenderButton(role);
    new RenderButton(level);
    languages.forEach((language) => new RenderButton(language));
    tools.forEach((tool) => new RenderButton(tool));
  }

  private attach() {
    this.hostElement.insertAdjacentElement("afterbegin", this.element);
  }
}

//--------------------------------------------------
new GetElements();
console.log(jobState.getJobs());

console.log(jobState.getFilteredJobs());
console.log(jobState.getFilter());
